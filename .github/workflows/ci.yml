name: CI/CD Deploy Logistiq

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run tests with coverage
        run: |
          source venv/bin/activate
          pytest --maxfail=1 --disable-warnings --cov=app --cov-report=term-missing

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: .coverage

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies (for validation)
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          debug: true
          script_stop: true
          script: |
            PROJECT_DIR="/home/logistiq/LogistiQ"
            VENV_DIR="$PROJECT_DIR/venv"

            echo "ðŸ”¹ Ajustando permissÃµes..."
            sudo chown -R logistiq:logistiq $PROJECT_DIR

            echo "ðŸ”¹ Atualizando repositÃ³rio Git..."
            cd $PROJECT_DIR
            echo "ðŸ§¹ Limpando diretÃ³rio antigo..."
            sudo rm -rf $PROJECT_DIR/*
            git config --global --add safe.directory $PROJECT_DIR
            git reset --hard
            git pull origin main

            echo "ðŸ”¹ Criando virtualenv se nÃ£o existir..."
            if [ ! -d "$VENV_DIR" ]; then
              python3 -m venv $VENV_DIR
            fi

            echo "ðŸ”¹ Ativando virtualenv e instalando dependÃªncias..."
            source $VENV_DIR/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

            echo "ðŸ”¹ Reiniciando serviÃ§os..."
            sudo systemctl reload logistiq || sudo systemctl restart logistiq
            sudo systemctl restart nginx

            echo "âœ… Deploy concluÃ­do com sucesso!"
            echo "ðŸ”— Acesse em: https://logistiq.studio"
