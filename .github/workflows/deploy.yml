name: 🚀 Deploy Produção (Servidor LogistiQ)

on:
  workflow_run:
    workflows: ["CI/CD LogistiQ"]
    types:
      - completed                  # Dispara quando o CI/CD termina

jobs:
  deploy:
    name: 🚀 Deploy Produção (Servidor LogistiQ)
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v4

      - name: 🐍 Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: ⚙️ Instalar dependências
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: 📡 Deploy via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          debug: true
          script_stop: true
          script: |
            PROJECT_DIR="/home/logistiq/LogistiQ"
            VENV_DIR="$PROJECT_DIR/venv"

            echo "🔹 Atualizando repositório..."
            cd $PROJECT_DIR
            git config --global --add safe.directory $PROJECT_DIR
            git fetch --all
            git reset --hard origin/main

            echo "🔹 Recriando ambiente virtual..."
            if [ ! -d "$VENV_DIR" ]; then
              python3 -m venv $VENV_DIR
            fi
            source $VENV_DIR/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

            echo "🔹 Reiniciando serviços..."
            sudo systemctl reload logistiq || sudo systemctl restart logistiq
            sudo systemctl restart nginx

            echo "✅ Deploy concluído com sucesso!"
            echo "🔗 Acesse: https://logistiq.studio"